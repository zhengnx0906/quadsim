<launch>
    <arg name="wname" default="neighborhood"/>
    <arg name="rname" default="a1"/>
    <arg name="robot_path" value="(find $(arg rname)_description)"/>
    <arg name="dollar" value="$"/>

    <arg name="paused" default="true"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <!-- Debug mode will hung up the robot, use "true" or "false" to switch it. -->
    <arg name="user_debug" default="false"/>
    <arg name="use_camera" default="true"/>
    <arg name="use_lidar" default="true"/>
    <arg name="use_gps" default="false"/>
    <arg name="use_xacro" default="true"/>
    
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find unitree_gazebo)/worlds/$(arg wname).world"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- Load the URDF into the ROS Parameter Server   robot-livox-->
    <group if="$(arg use_xacro)">
        <param name="robot_description"
            command="$(find xacro)/xacro --inorder '$(arg dollar)$(arg robot_path)/xacro/robot-livox.xacro' 
            DEBUG:=$(arg user_debug)
            USE_CAMERA:=$(arg use_camera)
            USE_LIDAR:=$(arg use_lidar)
            USE_GPS:=$(arg use_gps)"/>
    </group>
    <group unless="$(arg use_xacro)">
        <param name="robot_description" command="cat $(arg dollar)$(arg robot_path)/urdf/robot.urdf"/>
    </group>
    <param name="robotName" value="$(arg rname)"/>
    <param name="if_use_lidar" value="$(arg use_lidar)"/>
    <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner" respawn="false" output="screen"
          args="-urdf -z 0.4 -model $(arg rname)_gazebo -param robot_description -unpause"/>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(arg dollar)$(arg robot_path)/config/robot_control.yaml" command="load"/>

    <group ns= "/$(arg rname)_gazebo"> 
     <node pkg="controller_manager" type="spawner" name="controller_spawner" respawn="false"
            output="screen" args=" joint_state_controller
            FL_hip_controller FL_thigh_controller FL_calf_controller
            FR_hip_controller FR_thigh_controller FR_calf_controller
            RL_hip_controller RL_thigh_controller RL_calf_controller
            RR_hip_controller RR_thigh_controller RR_calf_controller --stopped"/> 

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"
          respawn="false" output="screen">
        <remap from="/joint_states" to="/$(arg rname)_gazebo/joint_states"/>
    </node>
    </group>
    
</launch>


